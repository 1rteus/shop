document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const currentUser = localStorage.getItem('currentUser');
    if (!currentUser) {
        window.location.href = 'index.html';
        return;
    }

    // –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    const messagesContainer = document.getElementById('messages');
    const messageInput = document.getElementById('message-input');
    const sendBtn = document.getElementById('send-btn');
    const logoutBtn = document.getElementById('logout-btn');
    const usernameDisplay = document.getElementById('username-display');
    const userAvatar = document.getElementById('user-avatar');
    const onlineCount = document.getElementById('online-count');
    const funButtons = document.querySelectorAll('.fun-btn');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    usernameDisplay.textContent = currentUser;
    userAvatar.textContent = currentUser.charAt(0).toUpperCase();
    userAvatar.style.backgroundColor = getRandomColor();

    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ "—Å–µ—Ä–≤–µ—Ä—É" (localStorage –∫–∞–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ)
    connectToChat();

    // –§—É–Ω–∫—Ü–∏–∏
    function getRandomColor() {
        const colors = ['#4a8fe7', '#e74a4a', '#4ae78f', '#e7b34a', '#8f4ae7'];
        return colors[Math.floor(Math.random() * colors.length)];
    }

    function connectToChat() {
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–Ω–ª–∞–π–Ω
        const onlineUsers = JSON.parse(localStorage.getItem('tegrafaOnlineUsers') || {};
        onlineUsers[currentUser] = new Date().getTime();
        localStorage.setItem('tegrafaOnlineUsers', JSON.stringify(onlineUsers));
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –æ–Ω–ª–∞–π–Ω
        loadMessages();
        updateOnlineCount();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        setInterval(updateOnlineCount, 5000);
        setInterval(checkOnlineUsers, 10000);
        
        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage (–∏–º–∏—Ç–∞—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —á–∞—Ç–∞)
        window.addEventListener('storage', handleStorageEvent);
    }

    function handleStorageEvent(e) {
        if (e.key === 'tegrafaMessages') {
            loadMessages();
        } else if (e.key === 'tegrafaOnlineUsers') {
            updateOnlineCount();
        }
    }

    function loadMessages() {
        const messages = JSON.parse(localStorage.getItem('tegrafaMessages')) || [];
        messagesContainer.innerHTML = '';
        
        messages.forEach(msg => {
            const messageElement = document.createElement('div');
            messageElement.classList.add('message');
            messageElement.classList.add(msg.sender === currentUser ? 'sent' : 'received');
            
            messageElement.innerHTML = `
                <div class="message-text">${msg.text}</div>
                <div class="message-info">
                    <span class="sender">${msg.sender}</span>
                    <span class="time">${msg.time}</span>
                </div>
            `;
            
            messagesContainer.appendChild(messageElement);
        });
        
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }

    function sendMessage() {
        const text = messageInput.value.trim();
        if (!text) return;
        
        const now = new Date();
        const time = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        
        const message = {
            sender: currentUser,
            text: text,
            time: time,
            timestamp: now.getTime()
        };
        
        const messages = JSON.parse(localStorage.getItem('tegrafaMessages')) || [];
        messages.push(message);
        localStorage.setItem('tegrafaMessages', JSON.stringify(messages));
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ä–∞–∑—É
        loadMessages();
        
        // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
        messageInput.value = '';
        
        // –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö –≤–∫–ª–∞–¥–æ–∫
        const event = new Event('storage');
        window.dispatchEvent(event);
    }

    function updateOnlineCount() {
        const onlineUsers = JSON.parse(localStorage.getItem('tegrafaOnlineUsers') || {};
        const currentTime = new Date().getTime();
        
        // –£–¥–∞–ª—è–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–µ–∞–∫—Ç–∏–≤–Ω—ã –±–æ–ª–µ–µ 30 —Å–µ–∫)
        Object.keys(onlineUsers).forEach(user => {
            if (currentTime - onlineUsers[user] > 30000) {
                delete onlineUsers[user];
            }
        });
        
        localStorage.setItem('tegrafaOnlineUsers', JSON.stringify(onlineUsers));
        onlineCount.textContent = Object.keys(onlineUsers).length;
    }

    function checkOnlineUsers() {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–µ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        const onlineUsers = JSON.parse(localStorage.getItem('tegrafaOnlineUsers') || {};
        onlineUsers[currentUser] = new Date().getTime();
        localStorage.setItem('tegrafaOnlineUsers', JSON.stringify(onlineUsers));
        
        // –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö –≤–∫–ª–∞–¥–æ–∫
        const event = new Event('storage');
        window.dispatchEvent(event);
    }

    function logout() {
        // –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ–Ω–ª–∞–π–Ω
        const onlineUsers = JSON.parse(localStorage.getItem('tegrafaOnlineUsers') || {};
        delete onlineUsers[currentUser];
        localStorage.setItem('tegrafaOnlineUsers', JSON.stringify(onlineUsers));
        
        // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
        localStorage.removeItem('currentUser');
        window.location.href = 'index.html';
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    sendBtn.addEventListener('click', sendMessage);
    messageInput.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            sendMessage();
        }
    });
    logoutBtn.addEventListener('click', logout);

    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    funButtons[0].addEventListener('click', function() {
        const stickers = ['üòÄ', 'ü§ñ', 'üéâ', '‚ù§Ô∏è', 'üî•', 'üëÄ', 'üöÄ', 'üåà'];
        messageInput.value += stickers[Math.floor(Math.random() * stickers.length)];
        messageInput.focus();
    });

    funButtons[1].addEventListener('click', function() {
        document.body.classList.toggle('light-theme');
    });

    funButtons[2].addEventListener('click', function() {
        alert('üîÆ –°–µ–∫—Ä–µ—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: —Ç–µ–ø–µ—Ä—å –≤—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –≤–æ–ª—à–µ–±–Ω—ã–º–∏!');
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏ –ª—é–±–æ–º –¥–µ–π—Å—Ç–≤–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    document.addEventListener('click', checkOnlineUsers);
    document.addEventListener('keypress', checkOnlineUsers);
});
