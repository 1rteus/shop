document.addEventListener('DOMContentLoaded', function() {
    const currentUser = localStorage.getItem('currentUser');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (!currentUser) {
        window.location.href = 'index.html';
        return;
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    usernameDisplay.textContent = currentUser;
    userAvatar.textContent = currentUser.charAt(0).toUpperCase();
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞
    const colors = ['#4a8fe7', '#e74a4a', '#4ae78f', '#e7b34a', '#8f4ae7'];
    const randomColor = colors[Math.floor(Math.random() * colors.length)];
    userAvatar.style.backgroundColor = randomColor;
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    function loadMessages() {
        const messages = JSON.parse(localStorage.getItem('tegrafaMessages')) || [];
        
        messagesContainer.innerHTML = '';
        
        messages.forEach(msg => {
            const messageElement = document.createElement('div');
            messageElement.classList.add('message');
            messageElement.classList.add(msg.sender === currentUser ? 'sent' : 'received');
            
            messageElement.innerHTML = `
                <div class="message-text">${msg.text}</div>
                <div class="message-info">
                    <span class="sender">${msg.sender}</span>
                    <span class="time">${msg.time}</span>
                </div>
            `;
            
            messagesContainer.appendChild(messageElement);
        });
        
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    function sendMessage() {
        const text = messageInput.value.trim();
        if (!text) return;
        
        const now = new Date();
        const time = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        
        const message = {
            sender: currentUser,
            text: text,
            time: time
        };
        
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        const messages = JSON.parse(localStorage.getItem('tegrafaMessages')) || [];
        messages.push(message);
        localStorage.setItem('tegrafaMessages', JSON.stringify(messages));
        
        // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞
        messageInput.value = '';
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
        loadMessages();
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ (–¥–ª—è –¥–µ–º–æ)
        if (Math.random() > 0.7) {
            setTimeout(() => {
                const botMessages = [
                    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
                    "–ö—Ç–æ-–Ω–∏–±—É–¥—å –∑–¥–µ—Å—å?",
                    "–¢–µ–≥—Ä–∞—Ñ–∞ - –ª—É—á—à–∏–π —á–∞—Ç!",
                    "–Ø –ø—Ä–æ—Å—Ç–æ –±–æ—Ç, –Ω–µ –æ–±—Ä–∞—â–∞–π—Ç–µ –Ω–∞ –º–µ–Ω—è –≤–Ω–∏–º–∞–Ω–∏—è",
                    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—à—É —Å–µ–∫—Ä–µ—Ç–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é üîÆ"
                ];
                
                const botMessage = {
                    sender: "–¢–µ–≥—Ä–∞—Ñ–∞-–ë–æ—Ç",
                    text: botMessages[Math.floor(Math.random() * botMessages.length)],
                    time: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })
                };
                
                const messages = JSON.parse(localStorage.getItem('tegrafaMessages')) || [];
                messages.push(botMessage);
                localStorage.setItem('tegrafaMessages', JSON.stringify(messages));
                
                loadMessages();
            }, 2000);
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    sendBtn.addEventListener('click', sendMessage);
    
    messageInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            sendMessage();
        }
    });
    
    logoutBtn.addEventListener('click', function() {
        localStorage.removeItem('currentUser');
        window.location.href = 'index.html';
    });
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –æ–Ω–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    function updateOnlineCount() {
        const count = 1 + Math.floor(Math.random() * 10);
        onlineCount.textContent = count;
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5-10 —Å–µ–∫—É–Ω–¥
    setInterval(updateOnlineCount, 5000 + Math.random() * 5000);
    updateOnlineCount();
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    loadMessages();
    
    // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ "–ø—Ä–∏–∫–æ–ª–æ–≤"
    funButtons.forEach((btn, index) => {
        btn.addEventListener('click', function() {
            switch(index) {
                case 0: // –°–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∏–∫–µ—Ä
                    const stickers = ['üòÄ', 'ü§ñ', 'üéâ', '‚ù§Ô∏è', 'üî•', 'üëÄ', 'üöÄ', 'üåà'];
                    const randomSticker = stickers[Math.floor(Math.random() * stickers.length)];
                    messageInput.value += randomSticker;
                    break;
                    
                case 1: // –°–º–µ–Ω–∞ —Ç–µ–º—ã
                    document.body.classList.toggle('light-theme');
                    break;
                    
                case 2: // –°–µ–∫—Ä–µ—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
                    alert('–°–µ–∫—Ä–µ—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! –¢–µ–ø–µ—Ä—å –≤—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –≤–æ–ª—à–µ–±–Ω—ã–º–∏ ‚ú®');
                    break;
            }
        });
    });
});
