document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const currentUser = localStorage.getItem('currentUser');
    if (!currentUser) {
        window.location.href = 'index.html';
        return;
    }

    // –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    const messagesContainer = document.getElementById('messages');
    const messageInput = document.getElementById('message-input');
    const sendBtn = document.getElementById('send-btn');
    const logoutBtn = document.getElementById('logout-btn');
    const usernameDisplay = document.getElementById('username-display');
    const userAvatar = document.getElementById('user-avatar');
    const onlineCount = document.getElementById('online-count');
    const funButtons = document.querySelectorAll('.fun-btn');
    const themeBtn = document.querySelector('.fun-btn[title="–°–º–µ–Ω–∏—Ç—å —Ç–µ–º—É"]');

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    usernameDisplay.textContent = currentUser;
    userAvatar.textContent = currentUser.charAt(0).toUpperCase();
    
    // –¶–≤–µ—Ç –∞–≤–∞—Ç–∞—Ä–∞
    const colors = ['#4a8fe7', '#e74a4a', '#4ae78f', '#e7b34a', '#8f4ae7'];
    userAvatar.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    function loadMessages() {
        const messages = JSON.parse(localStorage.getItem('tegrafaMessages')) || [];
        messagesContainer.innerHTML = '';
        
        messages.forEach(msg => {
            const messageElement = document.createElement('div');
            messageElement.classList.add('message');
            messageElement.classList.add(msg.sender === currentUser ? 'sent' : 'received');
            
            messageElement.innerHTML = `
                <div class="message-text">${msg.text}</div>
                <div class="message-info">
                    <span class="sender">${msg.sender}</span>
                    <span class="time">${msg.time}</span>
                </div>
            `;
            
            messagesContainer.appendChild(messageElement);
        });
        
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    function sendMessage() {
        const text = messageInput.value.trim();
        if (!text) return;
        
        const now = new Date();
        const time = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        
        const message = {
            sender: currentUser,
            text: text,
            time: time
        };
        
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        const messages = JSON.parse(localStorage.getItem('tegrafaMessages')) || [];
        messages.push(message);
        localStorage.setItem('tegrafaMessages', JSON.stringify(messages));
        
        // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞
        messageInput.value = '';
        loadMessages();
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ (30% chance)
        if (Math.random() < 0.3) {
            setTimeout(sendBotMessage, 1500 + Math.random() * 3000);
        }
    }

    // –û—Ç–≤–µ—Ç –±–æ—Ç–∞
    function sendBotMessage() {
        const botMessages = [
            "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
            "–ö—Ç–æ-–Ω–∏–±—É–¥—å –∑–¥–µ—Å—å?",
            "–¢–µ–≥—Ä–∞—Ñ–∞ - –ª—É—á—à–∏–π —á–∞—Ç!",
            "–Ø –ø—Ä–æ—Å—Ç–æ –±–æ—Ç, –Ω–µ –æ–±—Ä–∞—â–∞–π—Ç–µ –Ω–∞ –º–µ–Ω—è –≤–Ω–∏–º–∞–Ω–∏—è",
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—à—É —Å–µ–∫—Ä–µ—Ç–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é üîÆ",
            "–ö–∞–∫–æ–π –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –æ–±—â–µ–Ω–∏—è!",
            "–í—ã –∑–Ω–∞–ª–∏, —á—Ç–æ —ç—Ç–æ—Ç —á–∞—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞ localStorage?",
            "–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ!"
        ];
        
        const botMessage = {
            sender: "–¢–µ–≥—Ä–∞—Ñ–∞-–ë–æ—Ç",
            text: botMessages[Math.floor(Math.random() * botMessages.length)],
            time: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })
        };
        
        const messages = JSON.parse(localStorage.getItem('tegrafaMessages')) || [];
        messages.push(botMessage);
        localStorage.setItem('tegrafaMessages', JSON.stringify(messages));
        loadMessages();
    }

    // –í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
    function logout() {
        localStorage.removeItem('currentUser');
        window.location.href = 'index.html';
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –æ–Ω–ª–∞–π–Ω
    function updateOnlineCount() {
        const count = 1 + Math.floor(Math.random() * 15);
        onlineCount.textContent = count;
    }

    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    function sendRandomSticker() {
        const stickers = ['üòÄ', 'ü§ñ', 'üéâ', '‚ù§Ô∏è', 'üî•', 'üëÄ', 'üöÄ', 'üåà', 'üëç', 'üéØ'];
        const randomSticker = stickers[Math.floor(Math.random() * stickers.length)];
        messageInput.value += randomSticker;
        messageInput.focus();
    }

    function toggleTheme() {
        document.body.classList.toggle('light-theme');
    }

    function secretFunction() {
        const secretMessages = [
            "–í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Å–µ–∫—Ä–µ—Ç–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é!",
            "‚ú® –ú–∞–≥–∏—è —á–∞—Ç–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ ‚ú®",
            "–¢–µ–ø–µ—Ä—å –≤—ã –≤–∏–¥–∏—Ç–µ —Å–∫—Ä—ã—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
            "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –Ω–∞—à–ª–∏ –ø–∞—Å—Ö–∞–ª–∫—É"
        ];
        
        alert(secretMessages[Math.floor(Math.random() * secretMessages.length)]);
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    sendBtn.addEventListener('click', sendMessage);
    
    messageInput.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            sendMessage();
        }
    });
    
    logoutBtn.addEventListener('click', logout);
    
    // –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –∫–Ω–æ–ø–∫–∞–º
    funButtons[0].addEventListener('click', sendRandomSticker);
    funButtons[1].addEventListener('click', toggleTheme);
    funButtons[2].addEventListener('click', secretFunction);
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–Ω–ª–∞–π–Ω –∫–∞–∂–¥—ã–µ 5-10 —Å–µ–∫
    setInterval(updateOnlineCount, 5000 + Math.random() * 5000);
    updateOnlineCount();
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    loadMessages();
});
